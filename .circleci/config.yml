# Docs https://circleci.com/docs/2.0
# Config file docs: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  cypress: cypress-io/cypress@1 # https://circleci.com/orbs/registry/orb/cypress-io/cypress

# CircleCI maintains a library of pre-built images: https://circleci.com/docs/2.0/circleci-images/
executors:
  base:
    docker:
      - image: basaltinc/docker-node-php-base:latest
    working_directory: ~/repo
  cypress-with-php:  # This is an extension of the Basaltinc Node + Php image used for Knapsack that includes global cypress dependencies
    docker:
      - image: basaltinc/docker-node-php-cypress:latest # https://cloud.docker.com/u/basaltinc/repository/docker/basaltinc/docker-node-php-cypress/general
    working_directory: ~/repo
  base-w-browsers:
    docker:
      - image: basaltinc/docker-node-php-browsers:latest
    working_directory: ~/repo


# types: string, boolean, integer, enum, executor, steps, environment variable name ~ https://circleci.com/docs/2.0/reusing-config/#parameter-types
commands:
  deploy-to-now:
    description: Deploy to now.sh
    steps:
      - run: mkdir ~/artifacts || true
      - run: npm i --unsafe-perm -g now
      - run:
          command: now deploy --scope basalt --token $ZEIT_TOKEN && sleep 3
          no_output_timeout: 20m
      # @todo ensure this script grabs correct url from previous step
      - run: ./scripts/create-github-deploy.js
      - run: cat ~/artifacts/now-url.txt
      - persist_to_workspace:
          root: '~'
          paths:
            - artifacts/now-url.txt

jobs:
  setup:
    executor: base
    steps:
      - checkout
      - run: mkdir -p ~/artifacts ~/.cache/yarn
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: CYPRESS_INSTALL_BINARY=0 yarn install --frozen-lockfile --cache-folder ~/.cache/yarn --prefer-offline
      #- run: ls ~/.cache/Cache
      - save_cache:
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
#            - ~/repo/node_modules
            - ~/.cache/yarn
#      - run: yarn clean
      - run: yarn build
      - run: yarn build:types
      - run: yarn lint:js --quiet
      - run: yarn lint:style
#      - run: yarn build:types
      - run: bash ./scripts/ensure-clean-git-repo.sh
      - persist_to_workspace:
          root: '~'
          paths:
            - repo
            - artifacts
            - .ssh
#            - .cache/Cypress

  tests:
    executor: cypress-with-php
    steps:
      - attach_workspace:
          at: '~'
      - run: yarn ava
      - run: yarn build:private
      - run: yarn test:examples
      - restore_cache:
          keys:
            - cypress-cache-{{ checksum "node_modules/cypress/package.json" }}
      - run: ./node_modules/.bin/cypress verify || ./node_modules/.bin/cypress install
      - save_cache:
          key: cypress-cache-{{ checksum "node_modules/cypress/package.json" }}
          paths:
            - ~/.cache/Cypress
      #- run: yarn test:cypress

  deploys:
    executor: cypress-with-php
    steps:
      - attach_workspace:
          at: '~'
      - run:
          name: Build Docs Site
          command: yarn build:docs
      - run:
          name: Deploy Docs Site
          command: |
            cp docs-site/now.json docs-site/build/knapsack
            npm i -g now
            if [ "$CIRCLE_BRANCH" = "next" ]; then
              now deploy --scope=basalt --prod --token $ZEIT_TOKEN docs-site/build/knapsack --local-config=./docs-site/build/knapsack/now.json
            else
              now deploy --scope=basalt --target staging --token $ZEIT_TOKEN docs-site/build/knapsack --local-config=./docs-site/build/knapsack/now.json
            fi
            # @todo restore
            # DEPLOY_URL=`./scripts/get-latest-deploy.js 'knapsack-docs'`
            # echo "Adding GitHub check for DEPLOY_URL: $DEPLOY_URL"
            # REPO_SLUG=basaltinc/knapsack GITHUB_TOKEN=$GH_TOKEN npx ci-utils gh-status --state success --url $DEPLOY_URL --description 'Docs Deploy' --context 'deploy/docs'
      # - run:
      #     name: Build Storybook
      #     command: yarn build:storybook
      # - run:
      #     name: Deploy Storybook
      #     command: |
      #       cp ./design-system/storybook/now.json ./design-system/storybook/dist
      #       if [ "$CIRCLE_BRANCH" = "master" ]; then
      #         now deploy --scope=basalt --prod --token $ZEIT_TOKEN ./design-system/storybook/dist --local-config=./design-system/storybook/dist/now.json
      #       else
      #         now deploy --scope=basalt --target staging --token $ZEIT_TOKEN ./design-system/storybook/dist --local-config=./design-system/storybook/dist/now.json
      #       fi
      #       DEPLOY_URL=`./scripts/get-latest-deploy.js 'knapsack-storybook'`
      #       echo "Adding GitHub check for DEPLOY_URL: $DEPLOY_URL"
      #       REPO_SLUG=basaltinc/knapsack GITHUB_TOKEN=$GH_TOKEN npx ci-utils gh-status --state success --url $DEPLOY_URL --description 'Storybook Deploy' --context 'deploy/storybook'
      # - run:
      #     name: Run Percy Visual Regression Tests on Storybook
      #     command: PERCY_TOKEN=$PERCY_TOKEN_STORYBOOK yarn test:percy-storybook

  deploy-knapsack:
    executor: cypress-with-php
    steps:
      - checkout
      - run:
          name: Deploy Knapsack Bootstrap Example
          command: |
            npm i -g now
            now deploy --env EXAMPLE=bootstrap --local-config=./examples/bootstrap/now.json --scope=basalt --token $ZEIT_TOKEN
            if [ "$CIRCLE_BRANCH" = "next" ]; then
              now alias --local-config=./examples/bootstrap/now.json --scope=basalt --token $ZEIT_TOKEN
            fi
          no_output_timeout: 30m

  test--publish:
    executor: base
    steps:
      - attach_workspace:
          at: '~'
      - run: ./scripts/test-publish.sh

  release:
    executor: base
    steps:
      - attach_workspace:
          at: '~'
      - run: ./scripts/release.sh

workflows:
  version: 2
  main:
    jobs:
      - setup
      - tests:
          requires:
            - setup
      - test--publish:
          requires:
            - setup
      - deploys:
          requires:
            - setup
      - deploy-knapsack
      - release:
          requires:
            - setup
            - tests
            - test--publish
            - deploys
            # - deploy-knapsack
          filters:
            branches:
              only: next
